#include "nn.h"
using namespace std;

static q15_t b1_conv1_wt[B1_CONV1_IN_CH*B1_CONV1_KER_DIM_X*B1_CONV1_KER_DIM_Y*B1_CONV1_OUT_CH] = CONV1_WT;
static q15_t b1_conv1_bias[B1_CONV1_OUT_CH] = CONV1_BIAS;
static q15_t b1_conv2_wt[B1_CONV2_IN_CH*B1_CONV2_KER_DIM_X*B1_CONV2_KER_DIM_Y*B1_CONV2_OUT_CH] = CONV2_WT;
static q15_t b1_conv2_bias[B1_CONV2_OUT_CH] = CONV2_BIAS;

static q15_t b2_conv1_wt[B2_CONV1_IN_CH*B2_CONV1_KER_DIM_X*B2_CONV1_KER_DIM_Y*B2_CONV1_OUT_CH] = CONV3_WT;
static q15_t b2_conv1_bias[B2_CONV1_OUT_CH] = CONV3_BIAS;
static q15_t b2_conv2_wt[B2_CONV2_IN_CH*B2_CONV2_KER_DIM_X*B2_CONV2_KER_DIM_Y*B2_CONV2_OUT_CH] = CONV4_WT;
static q15_t b2_conv2_bias[B2_CONV2_OUT_CH] = CONV4_BIAS;

static q15_t b3_conv1_wt[B3_CONV1_IN_CH*B3_CONV1_KER_DIM_X*B3_CONV1_KER_DIM_Y*B3_CONV1_OUT_CH] = CONV5_WT;
static q15_t b3_conv1_bias[B3_CONV1_OUT_CH] = CONV5_BIAS;
static q15_t b3_conv2_wt[B3_CONV2_IN_CH*B3_CONV2_KER_DIM_X*B3_CONV2_KER_DIM_Y*B3_CONV2_OUT_CH] = CONV6_WT;
static q15_t b3_conv2_bias[B3_CONV2_OUT_CH] = CONV6_BIAS;

static q15_t b4_conv1_wt[B4_CONV1_IN_CH*B4_CONV1_KER_DIM_X*B4_CONV1_KER_DIM_Y*B4_CONV1_OUT_CH] = CONV7_WT;
static q15_t b4_conv1_bias[B4_CONV1_OUT_CH] = CONV7_BIAS;
static q15_t b4_conv2_wt[B4_CONV2_IN_CH*B4_CONV2_KER_DIM_X*B4_CONV2_KER_DIM_Y*B4_CONV2_OUT_CH] = CONV8_WT;
static q15_t b4_conv2_bias[B4_CONV2_OUT_CH] = CONV8_BIAS;

static q15_t fc1_wt[FC1_IN_DIM*FC1_OUT_DIM] = FC1_WT;
static q15_t fc1_bias[FC1_OUT_DIM] = FC1_BIAS;

static q15_t fc2_wt[FC2_IN_DIM*FC2_OUT_DIM] = FC2_WT;
static q15_t fc2_bias[FC2_OUT_DIM] = FC2_BIAS;

static q15_t fc3_wt[FC3_IN_DIM*FC3_OUT_DIM] = FC3_WT;
static q15_t fc3_bias[FC3_OUT_DIM] = FC3_BIAS;


q15_t col_buffer[576];
q15_t scratch_buffer[65408*2];


void run_nn(q15_t* input_data, q15_t* output_data) {
	q15_t* buffer1 = scratch_buffer;
	q15_t* buffer2 = buffer1 + 65408;

	arm_convolve_HWC_q15_fast_nonsquare(input_data, B1_CONV1_IN_DIM_X, B1_CONV1_IN_DIM_Y, B1_CONV1_IN_CH, b1_conv1_wt, B1_CONV1_OUT_CH, B1_CONV1_KER_DIM_X, B1_CONV1_KER_DIM_Y, B1_CONV1_PAD_X, B1_CONV1_PAD_Y, B1_CONV1_STRIDE_X, B1_CONV1_STRIDE_Y, b1_conv1_bias, CONV1_BIAS_LSHIFT, CONV1_OUT_RSHIFT, buffer1, B1_CONV1_OUT_DIM_X, B1_CONV1_OUT_DIM_Y, (q15_t*)col_buffer, NULL);
	arm_relu_q15(buffer1, B1_CONV1_RELU_OUT_CH*B1_CONV1_RELU_OUT_DIM_X*B1_CONV1_RELU_OUT_DIM_Y);
	arm_convolve_HWC_q15_fast_nonsquare(buffer1, B1_CONV2_IN_DIM_X, B1_CONV2_IN_DIM_Y, B1_CONV2_IN_CH, b1_conv2_wt, B1_CONV2_OUT_CH, B1_CONV2_KER_DIM_X, B1_CONV2_KER_DIM_Y, B1_CONV2_PAD_X, B1_CONV2_PAD_Y, B1_CONV2_STRIDE_X, B1_CONV2_STRIDE_Y, b1_conv2_bias, CONV2_BIAS_LSHIFT, CONV2_OUT_RSHIFT, buffer2, B1_CONV2_OUT_DIM_X, B1_CONV2_OUT_DIM_Y, (q15_t*)col_buffer, NULL);
	arm_relu_q15(buffer2, B1_CONV2_RELU_OUT_CH*B1_CONV2_RELU_OUT_DIM_X*B1_CONV2_RELU_OUT_DIM_Y);
	local_maxpool_q15_HWC(buffer2, B1_POOL_IN_DIM_X, B1_POOL_IN_DIM_Y, B1_POOL_IN_CH, B1_POOL_KER_DIM_X, B1_POOL_KER_DIM_Y, B1_POOL_PAD_X, B1_POOL_PAD_Y, B1_POOL_STRIDE_X, B1_POOL_STRIDE_Y, B1_POOL_OUT_DIM_X, B1_POOL_OUT_DIM_Y, NULL, buffer1);

	arm_convolve_HWC_q15_fast_nonsquare(buffer1, B2_CONV1_IN_DIM_X, B2_CONV1_IN_DIM_Y, B2_CONV1_IN_CH, b2_conv1_wt, B2_CONV1_OUT_CH, B2_CONV1_KER_DIM_X, B2_CONV1_KER_DIM_Y, B2_CONV1_PAD_X, B2_CONV1_PAD_Y, B2_CONV1_STRIDE_X, B2_CONV1_STRIDE_Y, b2_conv1_bias, CONV3_BIAS_LSHIFT, CONV3_OUT_RSHIFT, buffer2, B2_CONV1_OUT_DIM_X, B2_CONV1_OUT_DIM_Y, (q15_t*)col_buffer, NULL);
	arm_relu_q15(buffer2, B2_CONV1_RELU_OUT_CH*B2_CONV1_RELU_OUT_DIM_X*B2_CONV1_RELU_OUT_DIM_Y);
	arm_convolve_HWC_q15_fast_nonsquare(buffer2, B2_CONV2_IN_DIM_X, B2_CONV2_IN_DIM_Y, B2_CONV2_IN_CH, b2_conv2_wt, B2_CONV2_OUT_CH, B2_CONV2_KER_DIM_X, B2_CONV2_KER_DIM_Y, B2_CONV2_PAD_X, B2_CONV2_PAD_Y, B2_CONV2_STRIDE_X, B2_CONV2_STRIDE_Y, b2_conv2_bias, CONV4_BIAS_LSHIFT, CONV4_OUT_RSHIFT, buffer1, B2_CONV2_OUT_DIM_X, B2_CONV2_OUT_DIM_Y, (q15_t*)col_buffer, NULL);
	arm_relu_q15(buffer1, B2_CONV2_RELU_OUT_CH*B2_CONV2_RELU_OUT_DIM_X*B2_CONV2_RELU_OUT_DIM_Y);
	local_maxpool_q15_HWC(buffer1, B2_POOL_IN_DIM_X, B2_POOL_IN_DIM_Y, B2_POOL_IN_CH, B2_POOL_KER_DIM_X, B2_POOL_KER_DIM_Y, B2_POOL_PAD_X, B2_POOL_PAD_Y, B2_POOL_STRIDE_X, B2_POOL_STRIDE_Y, B2_POOL_OUT_DIM_X, B2_POOL_OUT_DIM_Y, NULL, buffer2);

	arm_convolve_HWC_q15_fast_nonsquare(buffer2, B3_CONV1_IN_DIM_X, B3_CONV1_IN_DIM_Y, B3_CONV1_IN_CH, b3_conv1_wt, B3_CONV1_OUT_CH, B3_CONV1_KER_DIM_X, B3_CONV1_KER_DIM_Y, B3_CONV1_PAD_X, B3_CONV1_PAD_Y, B3_CONV1_STRIDE_X, B3_CONV1_STRIDE_Y, b3_conv1_bias, CONV5_BIAS_LSHIFT, CONV5_OUT_RSHIFT, buffer1, B3_CONV1_OUT_DIM_X, B3_CONV1_OUT_DIM_Y, (q15_t*)col_buffer, NULL);
	arm_relu_q15(buffer1, B3_CONV1_RELU_OUT_CH*B3_CONV1_RELU_OUT_DIM_X*B3_CONV1_RELU_OUT_DIM_Y);
	arm_convolve_HWC_q15_fast_nonsquare(buffer1, B3_CONV2_IN_DIM_X, B3_CONV2_IN_DIM_Y, B3_CONV2_IN_CH, b3_conv2_wt, B3_CONV2_OUT_CH, B3_CONV2_KER_DIM_X, B3_CONV2_KER_DIM_Y, B3_CONV2_PAD_X, B3_CONV2_PAD_Y, B3_CONV2_STRIDE_X, B3_CONV2_STRIDE_Y, b3_conv2_bias, CONV6_BIAS_LSHIFT, CONV6_OUT_RSHIFT, buffer2, B3_CONV2_OUT_DIM_X, B3_CONV2_OUT_DIM_Y, (q15_t*)col_buffer, NULL);
	arm_relu_q15(buffer2, B3_CONV2_RELU_OUT_CH*B3_CONV2_RELU_OUT_DIM_X*B3_CONV2_RELU_OUT_DIM_Y);
	local_maxpool_q15_HWC(buffer2, B3_POOL_IN_DIM_X, B3_POOL_IN_DIM_Y, B3_POOL_IN_CH, B3_POOL_KER_DIM_X, B3_POOL_KER_DIM_Y, B3_POOL_PAD_X, B3_POOL_PAD_Y, B3_POOL_STRIDE_X, B3_POOL_STRIDE_Y, B3_POOL_OUT_DIM_X, B3_POOL_OUT_DIM_Y, NULL, buffer1);

	arm_convolve_HWC_q15_fast_nonsquare(buffer1, B4_CONV1_IN_DIM_X, B4_CONV1_IN_DIM_Y, B4_CONV1_IN_CH, b4_conv1_wt, B4_CONV1_OUT_CH, B4_CONV1_KER_DIM_X, B4_CONV1_KER_DIM_Y, B4_CONV1_PAD_X, B4_CONV1_PAD_Y, B4_CONV1_STRIDE_X, B4_CONV1_STRIDE_Y, b4_conv1_bias, CONV7_BIAS_LSHIFT, CONV7_OUT_RSHIFT, buffer2, B4_CONV1_OUT_DIM_X, B4_CONV1_OUT_DIM_Y, (q15_t*)col_buffer, NULL);
	arm_relu_q15(buffer2, B4_CONV1_RELU_OUT_CH*B4_CONV1_RELU_OUT_DIM_X*B4_CONV1_RELU_OUT_DIM_Y);
	arm_convolve_HWC_q15_fast_nonsquare(buffer2, B4_CONV2_IN_DIM_X, B4_CONV2_IN_DIM_Y, B4_CONV2_IN_CH, b4_conv2_wt, B4_CONV2_OUT_CH, B4_CONV2_KER_DIM_X, B4_CONV2_KER_DIM_Y, B4_CONV2_PAD_X, B4_CONV2_PAD_Y, B4_CONV2_STRIDE_X, B4_CONV2_STRIDE_Y, b4_conv2_bias, CONV8_BIAS_LSHIFT, CONV8_OUT_RSHIFT, buffer1, B4_CONV2_OUT_DIM_X, B4_CONV2_OUT_DIM_Y, (q15_t*)col_buffer, NULL);
	arm_relu_q15(buffer1, B4_CONV2_RELU_OUT_CH*B4_CONV2_RELU_OUT_DIM_X*B4_CONV2_RELU_OUT_DIM_Y);
	local_maxpool_q15_HWC(buffer1, B4_POOL_IN_DIM_X, B4_POOL_IN_DIM_Y, B4_POOL_IN_CH, B4_POOL_KER_DIM_X, B4_POOL_KER_DIM_Y, B4_POOL_PAD_X, B4_POOL_PAD_Y, B4_POOL_STRIDE_X, B4_POOL_STRIDE_Y, B4_POOL_OUT_DIM_X, B4_POOL_OUT_DIM_Y, NULL, buffer2);

	//local_avepool_q15_HWC(buffer2, AVPOOL_IN_DIM_X, AVPOOL_IN_DIM_Y, AVPOOL_IN_CH, AVPOOL_KER_DIM_X, AVPOOL_KER_DIM_Y, AVPOOL_PAD_X, AVPOOL_PAD_Y, AVPOOL_STRIDE_X, AVPOOL_STRIDE_Y, AVPOOL_OUT_DIM_X, AVPOOL_OUT_DIM_Y, 0, NULL, buffer1);
	global_avepool_q15_HWC(buffer2, AVPOOL_IN_DIM_X, AVPOOL_IN_DIM_Y, AVPOOL_IN_CH, buffer1);
	arm_fully_connected_q15_ref(buffer1, fc1_wt, FC1_IN_DIM, FC1_OUT_DIM, FC1_BIAS_LSHIFT, FC1_OUT_RSHIFT, fc1_bias, buffer2, (q15_t*)col_buffer);
	arm_relu_q15(buffer2, FC1_OUT_DIM);
	arm_fully_connected_q15_ref(buffer2, fc2_wt, FC2_IN_DIM, FC2_OUT_DIM, FC2_BIAS_LSHIFT, FC2_OUT_RSHIFT, fc2_bias, buffer1, (q15_t*)col_buffer);
	arm_relu_q15(buffer1, FC2_OUT_DIM);
	arm_fully_connected_q15_ref(buffer1, fc3_wt, FC3_IN_DIM, FC3_OUT_DIM, FC3_BIAS_LSHIFT, FC3_OUT_RSHIFT, fc3_bias, output_data, (q15_t*)col_buffer);
	}